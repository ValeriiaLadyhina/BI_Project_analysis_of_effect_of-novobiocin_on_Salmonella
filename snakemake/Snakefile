configfile: "config.yaml"

rule all:
    input:
        #html = expand("analysis/qc/fastqc/{sample}.html", sample=config["samples"]),
        #zip = expand("analysis/qc/fastqc/{sample}_fastqc.zip", sample=config["samples"]),
        #index_files = expand("analysis/index.{index}.ht2", index=config["indexes"]),
        #assembly  = expand("analysis/stringtie_assembly/{sample}/{sample}.gtf", sample=config["samples"]),
        #matrix = "gene_count_matrix.csv",
        #deseq_report = "deseq.html",
        #New_positive_deg = "New_rna_positive_deg.txt"
        #wgcna_report = "wgcna.html"
        #New_yellow_result = "New_rna_yellow_result.txt"
        #"KEGG.html"
        #"New_rna_yellow_hub.txt"
        #"KEGG_hub.html"
        #"New_glycolysis_gluconeogenesis.txt"
        "Final_report.html"


rule fastqc:
    input:
        reads = "data/reads/{sample}.fastq"
    output:
        html = "analysis/qc/fastqc/{sample}.html",
        zip = "analysis/qc/fastqc/{sample}_fastqc.zip"
    params: "--quiet"
    log:
        log = "logs/fastqc/{sample}.log"
    wrapper:
        "v1.5.0/bio/fastqc"

rule hisat2_index:
    input:
        html = expand("analysis/qc/fastqc/{sample}.html", sample=config["samples"]),
        zip = expand("analysis/qc/fastqc/{sample}_fastqc.zip", sample=config["samples"]),
        genome = expand("data/{genome}_genomic.fna", genome=config["genome"])
    output:
        index_files = expand("analysis/index.{index}.ht2", index=config["indexes"])
    shell:
        "hisat2-build -p 2 {input.genome} analysis/index"

rule hisat2_align:
    input:
        reads = ["data/reads/{sample}.fastq"],
        index_files = expand("analysis/index.{index}.ht2", index=config["indexes"])
    output:
        "analysis/mapped/{sample}.sam"
    log:
        "logs/hisat2/hisat2_align_{sample}.log"
    params:
        extra = "",
        idx = "analysis/index"
    threads: 2
    wrapper:
        "v1.5.0/bio/hisat2/align"

rule samtools_sort:
    input:
        "analysis/mapped/{sample}.sam"
    output:
        sorted_bam = "analysis/mapped/{sample}.sorted.bam",
    log:
        "logs/samtools_sort/{sample}.log",
    params:
        extra="-m 4G",
    threads: 8
    wrapper:
        "v1.5.0/bio/samtools/sort"

rule stringtie_assembly:
    input:
        sorted_bam = "analysis/mapped/{sample}.sorted.bam",
        reference_annotation = "data/sequence.gff3"
    output:
        assembly = "analysis/stringtie_assembly/{sample}/{sample}.gtf"
    log:
		"output/logs/stringtie/{sample}.log"
    threads: 8
    shell:
        "stringtie -p {threads} -G {input.reference_annotation} -o {output.assembly} -e {input.sorted_bam}"

rule matrix_creation:
    input:
        assembly = expand("analysis/stringtie_assembly/{sample}/{sample}.gtf", sample=config["samples"])
    output:
        gene_file = "gene_count_matrix.csv"
    shell:
        "python3 scripts/prepDE.py3 -i analysis/stringtie_assembly"

rule deseq:
    input:
        rules.matrix_creation.output.gene_file
    output:
        "deseq.html"
    script:
        "deseq.Rmd"

rule gene_names_convereter_neg_pos:
    input:
        rules.deseq.output
    output:
        "New_rna_positive_deg.txt"
    log:
        notebook="logs/notebooks/processed_notebook.ipynb"
    shell:
        "python scripts/gene_name_converter_neg_pos.py"

rule KEGG_WGCNA:
    input:
        rules.gene_names_convereter_neg_pos.output
    output:
        "wgcna.html"
    script:
        "wgcna.Rmd"

rule gene_name_converter_modules:
    input:
        rules.KEGG_WGCNA.output
    output:
        "New_rna_yellow_result.txt"
    shell:
        "python scripts/gene_name_converter_modules.py"

rule KEGG_modules:
    input:
        rules.gene_name_converter_modules.output
    output:
        "KEGG.html"
    script:
        "KEGG.Rmd"

rule gene_name_converter_hubs:
    input:
        rules.KEGG_modules.output
    output:
        "New_rna_yellow_hub.txt"
    shell:
        "python scripts/gene_name_converter_hubs.py"

rule KEGG_hub:
    input:
        rules.gene_name_converter_hubs.output
    output:
        "KEGG_hub.html"
    script:
        "KEGG_hub.Rmd"

rule reverse_path:
    input:
        rules.KEGG_hub.output
    output:
        "New_glycolysis_gluconeogenesis.txt"
    shell:
        "python scripts/reverse_path.py"

rule final_report:
    input:
        rules.reverse_path.output
    output:
        "Final_report.html"
    script:
        "Final_report.Rmd"
